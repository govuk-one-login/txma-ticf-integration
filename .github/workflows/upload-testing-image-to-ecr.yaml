name: Upload testing image to ECR

on:
  push:
    branches:
      - main
    paths:
      - tests/**
      - common/**
  workflow_dispatch:
    branches:
      - main

env:
  AWS_REGION: eu-west-2

jobs:
  upload-testing-artifact:
    name: Upload testing image to ECR
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: v1.9.0
      - name: Build, tag, and push testing image to Amazon ECR
        env:
          CONTAINER_SIGN_KMS_KEY: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          # add commit hash to image as a label. You can pull the image from ECR and run the following command to see what commit was used to build the container
          # docker inspect CONTAINER_NAME | jq '.[].Config.Labels'`
          docker build -f tests/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg GIT_COMMIT=$(git log -1 --format=%h) .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
